# .github/workflows/daily-twitter-report.yml
# ------------------------------------------------------------
# Runs the DAILY Twitter analytics report
# ------------------------------------------------------------

name: Daily Twitter Report

on:
  # Manual trigger (still handy for testing)
  workflow_dispatch:

  # Automatic run every day at 03:00 UTC  (change the cron if you prefer)
  schedule:
    - cron: "0 3 * * *"        # min hr dom mon dow   (runs daily)

jobs:
  build-run:
    runs-on: ubuntu-latest

    # ------------------------------------------------------------------
    # Secrets & variables – set these in your repo or org settings
    # ------------------------------------------------------------------
    env:
      # ---------- Supabase ----------
      SUPABASE_HOST:         ${{ secrets.SUPABASE_HOST }}
      SUPABASE_PORT:         ${{ secrets.SUPABASE_PORT }}
      SUPABASE_DB:           ${{ secrets.SUPABASE_DB }}
      SUPABASE_USER:         ${{ secrets.SUPABASE_USER }}
      SUPABASE_PWD:          ${{ secrets.SUPABASE_PWD }}
      SUPABASE_URL:          ${{ secrets.SUPABASE_URL }}         # https://xxxxx.supabase.co
      SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}# service‑role key
      SB_BUCKET:             ${{ vars.SB_BUCKET || 'daily-reports' }}

      # ---------- OpenAI ----------
      OPENAI_API_KEY:        ${{ secrets.OPENAI_API_KEY }}

      # ---------- Mailjet ----------
      MJ_API_KEY:            ${{ secrets.MJ_API_KEY }}
      MJ_API_SECRET:         ${{ secrets.MJ_API_SECRET }}
      MAIL_FROM:             ${{ vars.MAIL_FROM }}
      MAIL_TO:               ${{ vars.MAIL_TO }}

      CI: true
      R_KEEP_PKG_SOURCE: no

    steps:
      # 1) Source code
      - uses: actions/checkout@v4

      # 2) R + pandoc
      - uses: r-lib/actions/setup-r@v2
        with: { use-public-rspm: true }
      - uses: r-lib/actions/setup-pandoc@v2

      # 3) Headless Chrome for pagedown PDF rendering
      - name: Install headless Chrome
        uses: browser-actions/setup-chrome@v2
        with:
          install-dependencies: true
          chrome-version: stable

      # 4) System libraries needed by some CRAN packages
      - name: Install system libraries
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libcurl4-openssl-dev libssl-dev libxml2-dev \
            libfontconfig1 libharfbuzz-dev libfribidi-dev \
            libfreetype6-dev libpng-dev libtiff5-dev libjpeg-dev

      # 5) R package dependencies
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::tidyverse
            any::lubridate
            any::httr2
            any::httr
            any::jsonlite
            any::glue
            any::pagedown
            any::RPostgres
            any::DBI
            any::base64enc
            any::tidytext

      # 6) (Optional) show which Chrome pagedown will use
      - name: Debug Chrome path
        run: |
          echo "CHROME_BIN -> $CHROME_BIN"
          Rscript -e 'cat("pagedown::find_chrome() ->", pagedown::find_chrome(), "\n")'

      # 7) Run the daily report
      - name: Run generate_report.R
        run: Rscript generate_report.R

      # 8) Keep artefacts for easy download / debugging
      - name: Upload report artefacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: daily-report-artifacts
          path: |
            summary.md
            summary_full.pdf
          if-no-files-found: warn
